//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.269
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Text;


namespace MyCookin.DAL.Properties {
    
   internal class MyAppConfig
    {
       internal static string GetValue(string AppKey, AppDomain MyAppDomain)
        {
            ExeConfigurationFileMap fileMap = new ExeConfigurationFileMap();
            fileMap.ExeConfigFilename = MyAppDomain.BaseDirectory + "Web.config";
            Configuration config = ConfigurationManager.OpenMappedExeConfiguration(fileMap, ConfigurationUserLevel.None);
            ConnectionStringsSection section = config.ConnectionStrings;
            string appsettings = section.ConnectionStrings[AppKey].ConnectionString;
            return appsettings;
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=MYCOOKIN01\\SQL2008R2_1;Initial Catalog=DBUsersProfile;Integrated Securit" +
            "y=True")]
        public string DBUsersProfileConnectionString {
            get {
                //return ((string)(this["DBUsersProfileConnectionString"]));
                return MyAppConfig.GetValue("DBUsersProfileConnectionString", AppDomain.CurrentDomain);
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=MYCOOKIN01\\SQL2008R2_1;Initial Catalog=DBErrorsAndMessages;Integrated Se" +
            "curity=True")]
        public string DBErrorsAndMessagesConnectionString {
            get {
                //return ((string)(this["DBErrorsAndMessagesConnectionString"]));
                return MyAppConfig.GetValue("DBErrorsAndMessagesConnectionString", AppDomain.CurrentDomain);
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=MYCOOKIN01\\SQL2008R2_1;Initial Catalog=DBRecipes;Integrated Security=Tru" +
            "e")]
        public string DBRecipesConnectionString {
            get {
                //return ((string)(this["DBRecipesConnectionString"]));
                return MyAppConfig.GetValue("DBRecipesConnectionString", AppDomain.CurrentDomain);
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=MYCOOKIN01\\SQL2008R2_1;Initial Catalog=DBMedia;Integrated Security=True")]
        public string DBMediaConnectionString {
            get {
                //return ((string)(this["DBMediaConnectionString"]));
                return MyAppConfig.GetValue("DBMediaConnectionString", AppDomain.CurrentDomain);
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=MYCOOKIN01\\SQL2008R2_1;Initial Catalog=DBAudit;Integrated Security=True")]
        public string DBAuditConnectionString {
            get {
                //return ((string)(this["DBAuditConnectionString"]));
                return MyAppConfig.GetValue("DBAuditConnectionString", AppDomain.CurrentDomain);
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=localhost;Initial Catalog=dbcities;Persist Security Info=True;User ID" +
            "=root;Password=MyCookin.001")]
        public string dbcitiesConnectionString {
            get {
                //return ((string)(this["dbcitiesConnectionString"]));
                return MyAppConfig.GetValue("dbcitiesConnectionString", AppDomain.CurrentDomain);
            }
        }
		
		[global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=Ale206hp\\sqlexpress;Initial Catalog=DBUsersBoard;Integrated Security=" +
            "True")]
        public string DBUsersBoardConnectionString {
            get {
                //return ((string)(this["DBUsersBoardConnectionString"]));
				return MyAppConfig.GetValue("DBUsersBoardConnectionString", AppDomain.CurrentDomain);
            }
        }
    }
}
