function LoadSimilarRecipes(e, t) { try { var n = $("#hfIDRecipe").val(); var r = $("#hfRecipeName").val(); var i = $("#hfVegan").val(); var s = $("#hfVegetarian").val(); var o = $("#hfGlutenFree").val(); var u = $("#hfIDLanguage").val(); var a = ""; $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Recipe/GetRecipesByType.asmx/GetSimilarRecipesListHTML", data: "{ RecipeName: '" + r + "', IDRecipe: '" + n + "', Vegan: '" + i + "', Vegetarian: '" + s + "', GlutenFree: '" + o + "', IDLanguage: '" + u + "'}", success: function (n) { $("#" + e).html(""); $.each(n.d, function () { $("#" + e).append(this.replace("{RecipeOf}", $("#hfRecipeOf").val()).replace("{RecipeOf2}", $("#hfRecipeOf2").val())) }); $("#" + t).css({ display: "none" }) } }) } catch (f) { } } function LoadUsers(e, t) { try { var n = $("#hfIDUser").val(); var r = 0; var i = 4; var s = ""; $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/User/FindUser.asmx/GetUsersSuggestionListHTML", data: "{ IDRequester: '" + n + "', RowOffset: '" + r + "', FetchRows: '" + i + "'}", success: function (n) { $("#" + e).html(""); $.each(n.d, function () { $("#" + e).append(this) }); $("#" + t).css({ display: "none" }) } }) } catch (o) { } } function LikeUnLikeRecipe(e) { try { var t = $("#hfIDUser").val(); var n = $("#hfIDRecipe").val(); var r = $("#hfIDRecipeOwner").val(); var i = $("#hfIDLanguage").val(); var s = $("#hfCurrentUsername").val(); var o = $("#hfCurrentRecipeUrl").val(); if ($("#" + e).attr("src").indexOf("-off") > -1) { $("#" + e).attr("src", $("#" + e).attr("src").replace("-off", "-on")) } else { $("#" + e).attr("src", $("#" + e).attr("src").replace("-on", "-off")) } $("#" + e).attr("disabled", "disabled"); $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Recipe/RecipeFeedbacks.asmx/LikeRecipe", data: "{ IDRecipe: '" + n + "',IDUser: '" + t + "',IDRecipeOwner: '" + r + "', IDLanguage: '" + i + "', Username: '" + s + "', RecipeURL: '" + o + "'}", success: function (t) { if (t.d.indexOf("--like--") > -1) { $("#" + e).attr("src", $("#" + e).attr("src").replace("-off", "-on")) } if (t.d.indexOf("--unlike--") > -1) { $("#" + e).attr("src", $("#" + e).attr("src").replace("-on", "-off")) } if (t.d.indexOf("error") > -1) { console.log(t.d) } $("#" + e).removeAttr("disabled"); RecipeLikesDeteils("pnlLikeDetails", "pnlLikeDetailsInt", "lnkLikesNumber") } }) } catch (u) { } } function RecipeLikesDeteils(e, t, n) { try { var r = $("#hfIDRecipe").val(); var i = 0; var s = 50; var o = $("#hfLikeDetailBaseText").val(); var u = ""; $("#" + n).removeAttr("href"); $("#" + n).unbind("click"); $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Recipe/RecipeFeedbacks.asmx/LikesDetailsForRecipe", data: "{ IDRecipe: '" + r + "', OffsetRows: '" + i + "', FetchRows: '" + s + "'}", success: function (r) { $("#" + t).html(""); $.each(r.d, function () { $("#" + t).append(this) }); if (r.d.length > 0) { $("#" + n).prop("href", "#"); $("#" + n).click(function () { if ($("#" + e).attr("class").indexOf("-hide") > -1) { $("#" + e).attr("class", "boxLikeDetails-visible") } else { $("#" + e).attr("class", "boxLikeDetails-hide") } return false }) } $("#" + n).text(o.replace("{0}", r.d.length)) } }) } catch (a) { } } function CloseDetails(e) { $("#" + e).attr("class", "boxLikeDetails-hide") } function ListRecipeComments(e, t, n) { try { var r = $("#hfIDRecipe").val(); var i = $("#hfIDUser").val(); var s = 0; var o = 50; var u = ""; $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Recipe/RecipeFeedbacks.asmx/ListCommentsForRecipe", data: "{ IDRecipe: '" + r + "', OffsetRows: '" + s + "', FetchRows: '" + o + "', IDUserRequester: '" + i + "'}", success: function (r) { $("#" + e).html(""); $.each(r.d, function () { $("#" + e).append(this) }); if (r.d.length > 5) { $("#" + e).attr("class", "pnlCommentsScroll") } else { $("#" + e).attr("class", "") } ResizeBackground(t, n) } }) } catch (a) { } } function AddComment(e, t, n, r) { try { var i = $("#hfIDUser").val(); var s = $("#hfIDRecipe").val(); var o = $("#hfIDRecipeOwner").val(); var u = $("#hfIDLanguage").val(); var a = $("#hfCurrentUsername").val(); var f = $("#hfCurrentRecipeUrl").val(); var l = $("#txtNewComment").val(); if (l != null && l != "") { l = l.replace("'", "\\'"); $("#" + r).attr("disabled", "disabled"); $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Recipe/RecipeFeedbacks.asmx/AddComment", data: "{ IDRecipe: '" + s + "',IDUser: '" + i + "',IDRecipeOwner: '" + o + "', IDLanguage: '" + u + "', Username: '" + a + "', RecipeURL: '" + f + "', Text: '" + l + "'}", success: function (i) { if (i.d.indexOf("200 OK") > -1) { $("#txtNewComment").val(""); ListRecipeComments(e, t, n); $("#" + r).removeAttr("disabled") } } }) } } catch (c) { } } function DeleteComment(e, t) { try { var n = $("#hfIDUser").val(); var r = $("#hfIDRecipe").val(); $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Recipe/RecipeFeedbacks.asmx/DeleteComment", data: "{ IDRecipeFeedback: '" + e + "',IDRecipe: '" + r + "',IDUser: '" + n + "'}", success: function (e) { if (e.d.indexOf("200 OK") > -1) { $("#" + t).css("display", "none") } } }) } catch (i) { console.log(i) } } function ResizeBackground(e, t) { $("#" + e).height($("#" + t).height()) }