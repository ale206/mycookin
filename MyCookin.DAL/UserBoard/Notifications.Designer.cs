//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace MyCookin.DAL.UserBoard
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBUsersBoardNotificationsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBUsersBoardNotificationsEntities object using the connection string found in the 'DBUsersBoardNotificationsEntities' section of the application configuration file.
        /// </summary>
        public DBUsersBoardNotificationsEntities() : base("name=DBUsersBoardNotificationsEntities", "DBUsersBoardNotificationsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBUsersBoardNotificationsEntities object.
        /// </summary>
        public DBUsersBoardNotificationsEntities(string connectionString) : base(connectionString, "DBUsersBoardNotificationsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBUsersBoardNotificationsEntities object.
        /// </summary>
        public DBUsersBoardNotificationsEntities(EntityConnection connection) : base(connection, "DBUsersBoardNotificationsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersNotifications> UsersNotifications
        {
            get
            {
                if ((_UsersNotifications == null))
                {
                    _UsersNotifications = base.CreateObjectSet<UsersNotifications>("UsersNotifications");
                }
                return _UsersNotifications;
            }
        }
        private ObjectSet<UsersNotifications> _UsersNotifications;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersNotifications(UsersNotifications usersNotifications)
        {
            base.AddObject("UsersNotifications", usersNotifications);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserOwnerRelatedObject">No Metadata Documentation available.</param>
        /// <param name="iDUserActionType">No Metadata Documentation available.</param>
        /// <param name="notificationsRead">No Metadata Documentation available.</param>
        /// <param name="allNotification">No Metadata Documentation available.</param>
        /// <param name="maxNotificationsNumber">No Metadata Documentation available.</param>
        public ObjectResult<UsersNotifications> USP_NotificationsGet(Nullable<global::System.Guid> iDUserOwnerRelatedObject, Nullable<global::System.Int32> iDUserActionType, Nullable<global::System.Int32> notificationsRead, Nullable<global::System.Boolean> allNotification, Nullable<global::System.Int32> maxNotificationsNumber)
        {
            ObjectParameter iDUserOwnerRelatedObjectParameter;
            if (iDUserOwnerRelatedObject.HasValue)
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", iDUserOwnerRelatedObject);
            }
            else
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserActionTypeParameter;
            if (iDUserActionType.HasValue)
            {
                iDUserActionTypeParameter = new ObjectParameter("IDUserActionType", iDUserActionType);
            }
            else
            {
                iDUserActionTypeParameter = new ObjectParameter("IDUserActionType", typeof(global::System.Int32));
            }
    
            ObjectParameter notificationsReadParameter;
            if (notificationsRead.HasValue)
            {
                notificationsReadParameter = new ObjectParameter("NotificationsRead", notificationsRead);
            }
            else
            {
                notificationsReadParameter = new ObjectParameter("NotificationsRead", typeof(global::System.Int32));
            }
    
            ObjectParameter allNotificationParameter;
            if (allNotification.HasValue)
            {
                allNotificationParameter = new ObjectParameter("AllNotification", allNotification);
            }
            else
            {
                allNotificationParameter = new ObjectParameter("AllNotification", typeof(global::System.Boolean));
            }
    
            ObjectParameter maxNotificationsNumberParameter;
            if (maxNotificationsNumber.HasValue)
            {
                maxNotificationsNumberParameter = new ObjectParameter("MaxNotificationsNumber", maxNotificationsNumber);
            }
            else
            {
                maxNotificationsNumberParameter = new ObjectParameter("MaxNotificationsNumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<UsersNotifications>("USP_NotificationsGet", iDUserOwnerRelatedObjectParameter, iDUserActionTypeParameter, notificationsReadParameter, allNotificationParameter, maxNotificationsNumberParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iDUserOwnerRelatedObject">No Metadata Documentation available.</param>
        /// <param name="iDUserActionType">No Metadata Documentation available.</param>
        /// <param name="notificationsRead">No Metadata Documentation available.</param>
        /// <param name="allNotification">No Metadata Documentation available.</param>
        /// <param name="maxNotificationsNumber">No Metadata Documentation available.</param>
        public ObjectResult<UsersNotifications> USP_NotificationsGet(Nullable<global::System.Guid> iDUserOwnerRelatedObject, Nullable<global::System.Int32> iDUserActionType, Nullable<global::System.Int32> notificationsRead, Nullable<global::System.Boolean> allNotification, Nullable<global::System.Int32> maxNotificationsNumber, MergeOption mergeOption)
        {
            ObjectParameter iDUserOwnerRelatedObjectParameter;
            if (iDUserOwnerRelatedObject.HasValue)
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", iDUserOwnerRelatedObject);
            }
            else
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserActionTypeParameter;
            if (iDUserActionType.HasValue)
            {
                iDUserActionTypeParameter = new ObjectParameter("IDUserActionType", iDUserActionType);
            }
            else
            {
                iDUserActionTypeParameter = new ObjectParameter("IDUserActionType", typeof(global::System.Int32));
            }
    
            ObjectParameter notificationsReadParameter;
            if (notificationsRead.HasValue)
            {
                notificationsReadParameter = new ObjectParameter("NotificationsRead", notificationsRead);
            }
            else
            {
                notificationsReadParameter = new ObjectParameter("NotificationsRead", typeof(global::System.Int32));
            }
    
            ObjectParameter allNotificationParameter;
            if (allNotification.HasValue)
            {
                allNotificationParameter = new ObjectParameter("AllNotification", allNotification);
            }
            else
            {
                allNotificationParameter = new ObjectParameter("AllNotification", typeof(global::System.Boolean));
            }
    
            ObjectParameter maxNotificationsNumberParameter;
            if (maxNotificationsNumber.HasValue)
            {
                maxNotificationsNumberParameter = new ObjectParameter("MaxNotificationsNumber", maxNotificationsNumber);
            }
            else
            {
                maxNotificationsNumberParameter = new ObjectParameter("MaxNotificationsNumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<UsersNotifications>("USP_NotificationsGet", mergeOption, iDUserOwnerRelatedObjectParameter, iDUserActionTypeParameter, notificationsReadParameter, allNotificationParameter, maxNotificationsNumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUser">No Metadata Documentation available.</param>
        /// <param name="iDUserActionType">No Metadata Documentation available.</param>
        /// <param name="uRLNotification">No Metadata Documentation available.</param>
        /// <param name="iDRelatedObject">No Metadata Documentation available.</param>
        /// <param name="notificationImage">No Metadata Documentation available.</param>
        /// <param name="userNotification">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="iDUserOwnerRelatedObject">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_NotificationInsert(Nullable<global::System.Guid> iDUser, Nullable<global::System.Int32> iDUserActionType, global::System.String uRLNotification, Nullable<global::System.Guid> iDRelatedObject, Nullable<global::System.Guid> notificationImage, global::System.String userNotification, Nullable<global::System.DateTime> createdOn, Nullable<global::System.Guid> iDUserOwnerRelatedObject)
        {
            ObjectParameter iDUserParameter;
            if (iDUser.HasValue)
            {
                iDUserParameter = new ObjectParameter("IDUser", iDUser);
            }
            else
            {
                iDUserParameter = new ObjectParameter("IDUser", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserActionTypeParameter;
            if (iDUserActionType.HasValue)
            {
                iDUserActionTypeParameter = new ObjectParameter("IDUserActionType", iDUserActionType);
            }
            else
            {
                iDUserActionTypeParameter = new ObjectParameter("IDUserActionType", typeof(global::System.Int32));
            }
    
            ObjectParameter uRLNotificationParameter;
            if (uRLNotification != null)
            {
                uRLNotificationParameter = new ObjectParameter("URLNotification", uRLNotification);
            }
            else
            {
                uRLNotificationParameter = new ObjectParameter("URLNotification", typeof(global::System.String));
            }
    
            ObjectParameter iDRelatedObjectParameter;
            if (iDRelatedObject.HasValue)
            {
                iDRelatedObjectParameter = new ObjectParameter("IDRelatedObject", iDRelatedObject);
            }
            else
            {
                iDRelatedObjectParameter = new ObjectParameter("IDRelatedObject", typeof(global::System.Guid));
            }
    
            ObjectParameter notificationImageParameter;
            if (notificationImage.HasValue)
            {
                notificationImageParameter = new ObjectParameter("NotificationImage", notificationImage);
            }
            else
            {
                notificationImageParameter = new ObjectParameter("NotificationImage", typeof(global::System.Guid));
            }
    
            ObjectParameter userNotificationParameter;
            if (userNotification != null)
            {
                userNotificationParameter = new ObjectParameter("UserNotification", userNotification);
            }
            else
            {
                userNotificationParameter = new ObjectParameter("UserNotification", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter iDUserOwnerRelatedObjectParameter;
            if (iDUserOwnerRelatedObject.HasValue)
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", iDUserOwnerRelatedObject);
            }
            else
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_NotificationInsert", iDUserParameter, iDUserActionTypeParameter, uRLNotificationParameter, iDRelatedObjectParameter, notificationImageParameter, userNotificationParameter, createdOnParameter, iDUserOwnerRelatedObjectParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserNotification">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_NotificationsSetAsNotified(Nullable<global::System.Guid> iDUserNotification)
        {
            ObjectParameter iDUserNotificationParameter;
            if (iDUserNotification.HasValue)
            {
                iDUserNotificationParameter = new ObjectParameter("IDUserNotification", iDUserNotification);
            }
            else
            {
                iDUserNotificationParameter = new ObjectParameter("IDUserNotification", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_NotificationsSetAsNotified", iDUserNotificationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserOwnerRelatedObject">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_NotificationsSetAsViewed(Nullable<global::System.Guid> iDUserOwnerRelatedObject)
        {
            ObjectParameter iDUserOwnerRelatedObjectParameter;
            if (iDUserOwnerRelatedObject.HasValue)
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", iDUserOwnerRelatedObject);
            }
            else
            {
                iDUserOwnerRelatedObjectParameter = new ObjectParameter("IDUserOwnerRelatedObject", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_NotificationsSetAsViewed", iDUserOwnerRelatedObjectParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUsersBoardModel", Name="UsersNotifications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersNotifications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersNotifications object.
        /// </summary>
        /// <param name="iDUserNotification">Initial value of the IDUserNotification property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="iDUserActionType">Initial value of the IDUserActionType property.</param>
        /// <param name="userNotification">Initial value of the UserNotification property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="iDUserOwnerRelatedObject">Initial value of the IDUserOwnerRelatedObject property.</param>
        public static UsersNotifications CreateUsersNotifications(global::System.Guid iDUserNotification, global::System.Guid iDUser, global::System.Int32 iDUserActionType, global::System.String userNotification, global::System.DateTime createdOn, global::System.Guid iDUserOwnerRelatedObject)
        {
            UsersNotifications usersNotifications = new UsersNotifications();
            usersNotifications.IDUserNotification = iDUserNotification;
            usersNotifications.IDUser = iDUser;
            usersNotifications.IDUserActionType = iDUserActionType;
            usersNotifications.UserNotification = userNotification;
            usersNotifications.CreatedOn = createdOn;
            usersNotifications.IDUserOwnerRelatedObject = iDUserOwnerRelatedObject;
            return usersNotifications;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserNotification
        {
            get
            {
                return _IDUserNotification;
            }
            set
            {
                if (_IDUserNotification != value)
                {
                    OnIDUserNotificationChanging(value);
                    ReportPropertyChanging("IDUserNotification");
                    _IDUserNotification = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUserNotification");
                    OnIDUserNotificationChanged();
                }
            }
        }
        private global::System.Guid _IDUserNotification;
        partial void OnIDUserNotificationChanging(global::System.Guid value);
        partial void OnIDUserNotificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Guid _IDUser;
        partial void OnIDUserChanging(global::System.Guid value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUserActionType
        {
            get
            {
                return _IDUserActionType;
            }
            set
            {
                OnIDUserActionTypeChanging(value);
                ReportPropertyChanging("IDUserActionType");
                _IDUserActionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserActionType");
                OnIDUserActionTypeChanged();
            }
        }
        private global::System.Int32 _IDUserActionType;
        partial void OnIDUserActionTypeChanging(global::System.Int32 value);
        partial void OnIDUserActionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLNotification
        {
            get
            {
                return _URLNotification;
            }
            set
            {
                OnURLNotificationChanging(value);
                ReportPropertyChanging("URLNotification");
                _URLNotification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLNotification");
                OnURLNotificationChanged();
            }
        }
        private global::System.String _URLNotification;
        partial void OnURLNotificationChanging(global::System.String value);
        partial void OnURLNotificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> IDRelatedObject
        {
            get
            {
                return _IDRelatedObject;
            }
            set
            {
                OnIDRelatedObjectChanging(value);
                ReportPropertyChanging("IDRelatedObject");
                _IDRelatedObject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDRelatedObject");
                OnIDRelatedObjectChanged();
            }
        }
        private Nullable<global::System.Guid> _IDRelatedObject;
        partial void OnIDRelatedObjectChanging(Nullable<global::System.Guid> value);
        partial void OnIDRelatedObjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> NotificationImage
        {
            get
            {
                return _NotificationImage;
            }
            set
            {
                OnNotificationImageChanging(value);
                ReportPropertyChanging("NotificationImage");
                _NotificationImage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationImage");
                OnNotificationImageChanged();
            }
        }
        private Nullable<global::System.Guid> _NotificationImage;
        partial void OnNotificationImageChanging(Nullable<global::System.Guid> value);
        partial void OnNotificationImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserNotification
        {
            get
            {
                return _UserNotification;
            }
            set
            {
                OnUserNotificationChanging(value);
                ReportPropertyChanging("UserNotification");
                _UserNotification = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserNotification");
                OnUserNotificationChanged();
            }
        }
        private global::System.String _UserNotification;
        partial void OnUserNotificationChanging(global::System.String value);
        partial void OnUserNotificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ViewedOn
        {
            get
            {
                return _ViewedOn;
            }
            set
            {
                OnViewedOnChanging(value);
                ReportPropertyChanging("ViewedOn");
                _ViewedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewedOn");
                OnViewedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ViewedOn;
        partial void OnViewedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnViewedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NotifiedOn
        {
            get
            {
                return _NotifiedOn;
            }
            set
            {
                OnNotifiedOnChanging(value);
                ReportPropertyChanging("NotifiedOn");
                _NotifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotifiedOn");
                OnNotifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _NotifiedOn;
        partial void OnNotifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnNotifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserOwnerRelatedObject
        {
            get
            {
                return _IDUserOwnerRelatedObject;
            }
            set
            {
                OnIDUserOwnerRelatedObjectChanging(value);
                ReportPropertyChanging("IDUserOwnerRelatedObject");
                _IDUserOwnerRelatedObject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserOwnerRelatedObject");
                OnIDUserOwnerRelatedObjectChanged();
            }
        }
        private global::System.Guid _IDUserOwnerRelatedObject;
        partial void OnIDUserOwnerRelatedObjectChanging(global::System.Guid value);
        partial void OnIDUserOwnerRelatedObjectChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBUsersBoardModel", Name="USPResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class USPResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USPResult object.
        /// </summary>
        /// <param name="isError">Initial value of the isError property.</param>
        /// <param name="resultExecutionCode">Initial value of the ResultExecutionCode property.</param>
        /// <param name="uSPReturnValue">Initial value of the USPReturnValue property.</param>
        public static USPResult CreateUSPResult(global::System.Boolean isError, global::System.String resultExecutionCode, global::System.String uSPReturnValue)
        {
            USPResult uSPResult = new USPResult();
            uSPResult.isError = isError;
            uSPResult.ResultExecutionCode = resultExecutionCode;
            uSPResult.USPReturnValue = uSPReturnValue;
            return uSPResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isError
        {
            get
            {
                return _isError;
            }
            set
            {
                OnisErrorChanging(value);
                ReportPropertyChanging("isError");
                _isError = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isError");
                OnisErrorChanged();
            }
        }
        private global::System.Boolean _isError;
        partial void OnisErrorChanging(global::System.Boolean value);
        partial void OnisErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultExecutionCode
        {
            get
            {
                return _ResultExecutionCode;
            }
            set
            {
                OnResultExecutionCodeChanging(value);
                ReportPropertyChanging("ResultExecutionCode");
                _ResultExecutionCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResultExecutionCode");
                OnResultExecutionCodeChanged();
            }
        }
        private global::System.String _ResultExecutionCode;
        partial void OnResultExecutionCodeChanging(global::System.String value);
        partial void OnResultExecutionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USPReturnValue
        {
            get
            {
                return _USPReturnValue;
            }
            set
            {
                OnUSPReturnValueChanging(value);
                ReportPropertyChanging("USPReturnValue");
                _USPReturnValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USPReturnValue");
                OnUSPReturnValueChanged();
            }
        }
        private global::System.String _USPReturnValue;
        partial void OnUSPReturnValueChanging(global::System.String value);
        partial void OnUSPReturnValueChanged();

        #endregion

    }

    #endregion

    
}
