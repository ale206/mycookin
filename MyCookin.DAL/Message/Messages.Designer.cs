//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DBMessageChatModel", "FK_Messages_MessagesTypes", "MessagesTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyCookin.DAL.Message.MessagesTypes), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyCookin.DAL.Message.Messages), true)]
[assembly: EdmRelationshipAttribute("DBMessageChatModel", "FK_MessagesRecipients_Messages", "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyCookin.DAL.Message.Messages), "MessagesRecipients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyCookin.DAL.Message.MessagesRecipients), true)]
[assembly: EdmRelationshipAttribute("DBMessageChatModel", "FK_MessagesRecipients_UsersConversations", "UsersConversations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyCookin.DAL.Message.UsersConversations), "MessagesRecipients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyCookin.DAL.Message.MessagesRecipients), true)]

#endregion

namespace MyCookin.DAL.Message
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBMessageChatEntity : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBMessageChatEntity object using the connection string found in the 'DBMessageChatEntity' section of the application configuration file.
        /// </summary>
        public DBMessageChatEntity() : base("name=DBMessageChatEntity", "DBMessageChatEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBMessageChatEntity object.
        /// </summary>
        public DBMessageChatEntity(string connectionString) : base(connectionString, "DBMessageChatEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBMessageChatEntity object.
        /// </summary>
        public DBMessageChatEntity(EntityConnection connection) : base(connection, "DBMessageChatEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Messages> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Messages>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Messages> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessagesRecipients> MessagesRecipients
        {
            get
            {
                if ((_MessagesRecipients == null))
                {
                    _MessagesRecipients = base.CreateObjectSet<MessagesRecipients>("MessagesRecipients");
                }
                return _MessagesRecipients;
            }
        }
        private ObjectSet<MessagesRecipients> _MessagesRecipients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessagesTypes> MessagesTypes
        {
            get
            {
                if ((_MessagesTypes == null))
                {
                    _MessagesTypes = base.CreateObjectSet<MessagesTypes>("MessagesTypes");
                }
                return _MessagesTypes;
            }
        }
        private ObjectSet<MessagesTypes> _MessagesTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersConversations> UsersConversations
        {
            get
            {
                if ((_UsersConversations == null))
                {
                    _UsersConversations = base.CreateObjectSet<UsersConversations>("UsersConversations");
                }
                return _UsersConversations;
            }
        }
        private ObjectSet<UsersConversations> _UsersConversations;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Messages messages)
        {
            base.AddObject("Messages", messages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessagesRecipients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessagesRecipients(MessagesRecipients messagesRecipients)
        {
            base.AddObject("MessagesRecipients", messagesRecipients);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessagesTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessagesTypes(MessagesTypes messagesTypes)
        {
            base.AddObject("MessagesTypes", messagesTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersConversations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersConversations(UsersConversations usersConversations)
        {
            base.AddObject("UsersConversations", usersConversations);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDMessageType">No Metadata Documentation available.</param>
        public ObjectResult<MessagesTypes> USP_GetTypeOfMessageInfoByID(Nullable<global::System.Int32> iDMessageType)
        {
            ObjectParameter iDMessageTypeParameter;
            if (iDMessageType.HasValue)
            {
                iDMessageTypeParameter = new ObjectParameter("IDMessageType", iDMessageType);
            }
            else
            {
                iDMessageTypeParameter = new ObjectParameter("IDMessageType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MessagesTypes>("USP_GetTypeOfMessageInfoByID", iDMessageTypeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iDMessageType">No Metadata Documentation available.</param>
        public ObjectResult<MessagesTypes> USP_GetTypeOfMessageInfoByID(Nullable<global::System.Int32> iDMessageType, MergeOption mergeOption)
        {
            ObjectParameter iDMessageTypeParameter;
            if (iDMessageType.HasValue)
            {
                iDMessageTypeParameter = new ObjectParameter("IDMessageType", iDMessageType);
            }
            else
            {
                iDMessageTypeParameter = new ObjectParameter("IDMessageType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MessagesTypes>("USP_GetTypeOfMessageInfoByID", mergeOption, iDMessageTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDMessage">No Metadata Documentation available.</param>
        /// <param name="iDUserConversation">No Metadata Documentation available.</param>
        /// <param name="iDUserSender">No Metadata Documentation available.</param>
        /// <param name="iDUserRecipient">No Metadata Documentation available.</param>
        /// <param name="sentOn">No Metadata Documentation available.</param>
        /// <param name="viewedOn">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_InsertMessageRecipient(Nullable<global::System.Guid> iDMessage, Nullable<global::System.Guid> iDUserConversation, Nullable<global::System.Guid> iDUserSender, Nullable<global::System.Guid> iDUserRecipient, Nullable<global::System.DateTime> sentOn, Nullable<global::System.DateTime> viewedOn, Nullable<global::System.DateTime> deletedOn)
        {
            ObjectParameter iDMessageParameter;
            if (iDMessage.HasValue)
            {
                iDMessageParameter = new ObjectParameter("IDMessage", iDMessage);
            }
            else
            {
                iDMessageParameter = new ObjectParameter("IDMessage", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserConversationParameter;
            if (iDUserConversation.HasValue)
            {
                iDUserConversationParameter = new ObjectParameter("IDUserConversation", iDUserConversation);
            }
            else
            {
                iDUserConversationParameter = new ObjectParameter("IDUserConversation", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserSenderParameter;
            if (iDUserSender.HasValue)
            {
                iDUserSenderParameter = new ObjectParameter("IDUserSender", iDUserSender);
            }
            else
            {
                iDUserSenderParameter = new ObjectParameter("IDUserSender", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserRecipientParameter;
            if (iDUserRecipient.HasValue)
            {
                iDUserRecipientParameter = new ObjectParameter("IDUserRecipient", iDUserRecipient);
            }
            else
            {
                iDUserRecipientParameter = new ObjectParameter("IDUserRecipient", typeof(global::System.Guid));
            }
    
            ObjectParameter sentOnParameter;
            if (sentOn.HasValue)
            {
                sentOnParameter = new ObjectParameter("SentOn", sentOn);
            }
            else
            {
                sentOnParameter = new ObjectParameter("SentOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter viewedOnParameter;
            if (viewedOn.HasValue)
            {
                viewedOnParameter = new ObjectParameter("ViewedOn", viewedOn);
            }
            else
            {
                viewedOnParameter = new ObjectParameter("ViewedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<USPResult>("USP_InsertMessageRecipient", iDMessageParameter, iDUserConversationParameter, iDUserSenderParameter, iDUserRecipientParameter, sentOnParameter, viewedOnParameter, deletedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDMessage">No Metadata Documentation available.</param>
        public ObjectResult<Messages> USP_GetMessageInfoByID(Nullable<global::System.Guid> iDMessage)
        {
            ObjectParameter iDMessageParameter;
            if (iDMessage.HasValue)
            {
                iDMessageParameter = new ObjectParameter("IDMessage", iDMessage);
            }
            else
            {
                iDMessageParameter = new ObjectParameter("IDMessage", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Messages>("USP_GetMessageInfoByID", iDMessageParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iDMessage">No Metadata Documentation available.</param>
        public ObjectResult<Messages> USP_GetMessageInfoByID(Nullable<global::System.Guid> iDMessage, MergeOption mergeOption)
        {
            ObjectParameter iDMessageParameter;
            if (iDMessage.HasValue)
            {
                iDMessageParameter = new ObjectParameter("IDMessage", iDMessage);
            }
            else
            {
                iDMessageParameter = new ObjectParameter("IDMessage", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Messages>("USP_GetMessageInfoByID", mergeOption, iDMessageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDMessageType">No Metadata Documentation available.</param>
        /// <param name="message">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_InsertMessage(Nullable<global::System.Int32> iDMessageType, global::System.String message)
        {
            ObjectParameter iDMessageTypeParameter;
            if (iDMessageType.HasValue)
            {
                iDMessageTypeParameter = new ObjectParameter("IDMessageType", iDMessageType);
            }
            else
            {
                iDMessageTypeParameter = new ObjectParameter("IDMessageType", typeof(global::System.Int32));
            }
    
            ObjectParameter messageParameter;
            if (message != null)
            {
                messageParameter = new ObjectParameter("Message", message);
            }
            else
            {
                messageParameter = new ObjectParameter("Message", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<USPResult>("USP_InsertMessage", iDMessageTypeParameter, messageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDMessageRecipient">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_MessageSetAsDeleted(Nullable<global::System.Guid> iDMessageRecipient)
        {
            ObjectParameter iDMessageRecipientParameter;
            if (iDMessageRecipient.HasValue)
            {
                iDMessageRecipientParameter = new ObjectParameter("IDMessageRecipient", iDMessageRecipient);
            }
            else
            {
                iDMessageRecipientParameter = new ObjectParameter("IDMessageRecipient", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_MessageSetAsDeleted", iDMessageRecipientParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUser">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_InsertConversation(Nullable<global::System.Guid> iDUser, Nullable<global::System.Guid> iDConversation, Nullable<global::System.DateTime> createdOn)
        {
            ObjectParameter iDUserParameter;
            if (iDUser.HasValue)
            {
                iDUserParameter = new ObjectParameter("IDUser", iDUser);
            }
            else
            {
                iDUserParameter = new ObjectParameter("IDUser", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<USPResult>("USP_InsertConversation", iDUserParameter, iDConversationParameter, createdOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversation">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_UserConversationSetAsArchived(Nullable<global::System.Guid> iDUserConversation)
        {
            ObjectParameter iDUserConversationParameter;
            if (iDUserConversation.HasValue)
            {
                iDUserConversationParameter = new ObjectParameter("IDUserConversation", iDUserConversation);
            }
            else
            {
                iDUserConversationParameter = new ObjectParameter("IDUserConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_UserConversationSetAsArchived", iDUserConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<UsersConversations> USP_GetUsersOfAConversation(Nullable<global::System.Guid> iDConversation)
        {
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UsersConversations>("USP_GetUsersOfAConversation", iDConversationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<UsersConversations> USP_GetUsersOfAConversation(Nullable<global::System.Guid> iDConversation, MergeOption mergeOption)
        {
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UsersConversations>("USP_GetUsersOfAConversation", mergeOption, iDConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUser">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<UsersConversations> USP_IsUserPartOfAConversation(Nullable<global::System.Guid> iDUser, Nullable<global::System.Guid> iDConversation)
        {
            ObjectParameter iDUserParameter;
            if (iDUser.HasValue)
            {
                iDUserParameter = new ObjectParameter("IDUser", iDUser);
            }
            else
            {
                iDUserParameter = new ObjectParameter("IDUser", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UsersConversations>("USP_IsUserPartOfAConversation", iDUserParameter, iDConversationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iDUser">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<UsersConversations> USP_IsUserPartOfAConversation(Nullable<global::System.Guid> iDUser, Nullable<global::System.Guid> iDConversation, MergeOption mergeOption)
        {
            ObjectParameter iDUserParameter;
            if (iDUser.HasValue)
            {
                iDUserParameter = new ObjectParameter("IDUser", iDUser);
            }
            else
            {
                iDUserParameter = new ObjectParameter("IDUser", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UsersConversations>("USP_IsUserPartOfAConversation", mergeOption, iDUserParameter, iDConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_MessageSetAsViewed(Nullable<global::System.Guid> iDUserConversationOwner)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_MessageSetAsViewed", iDUserConversationOwnerParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user1">No Metadata Documentation available.</param>
        /// <param name="user2">No Metadata Documentation available.</param>
        public ObjectResult<Conversation> USP_GetConversationIdBetweenTwoUsers(Nullable<global::System.Guid> user1, Nullable<global::System.Guid> user2)
        {
            ObjectParameter user1Parameter;
            if (user1.HasValue)
            {
                user1Parameter = new ObjectParameter("user1", user1);
            }
            else
            {
                user1Parameter = new ObjectParameter("user1", typeof(global::System.Guid));
            }
    
            ObjectParameter user2Parameter;
            if (user2.HasValue)
            {
                user2Parameter = new ObjectParameter("user2", user2);
            }
            else
            {
                user2Parameter = new ObjectParameter("user2", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Conversation>("USP_GetConversationIdBetweenTwoUsers", user1Parameter, user2Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<MessagesOfConversation> USP_GetMessagesOfAConversation(Nullable<global::System.Guid> iDUserConversationOwner, Nullable<global::System.Guid> iDConversation)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<MessagesOfConversation>("USP_GetMessagesOfAConversation", iDUserConversationOwnerParameter, iDConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_UserConversationSetAsActive(Nullable<global::System.Guid> iDConversation)
        {
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_UserConversationSetAsActive", iDConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="me">No Metadata Documentation available.</param>
        public ObjectResult<ListOfConversations> USP_GetMyConversations(Nullable<global::System.Guid> me)
        {
            ObjectParameter meParameter;
            if (me.HasValue)
            {
                meParameter = new ObjectParameter("me", me);
            }
            else
            {
                meParameter = new ObjectParameter("me", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<ListOfConversations>("USP_GetMyConversations", meParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        public ObjectResult<MessagesToRead> USP_GetMessagesToRead(Nullable<global::System.Guid> iDUserConversationOwner)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<MessagesToRead>("USP_GetMessagesToRead", iDUserConversationOwnerParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<USPResult> USP_MessagesOfAConversationSetAsViewed(Nullable<global::System.Guid> iDUserConversationOwner, Nullable<global::System.Guid> iDConversation)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<USPResult>("USP_MessagesOfAConversationSetAsViewed", iDUserConversationOwnerParameter, iDConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        /// <param name="offset">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        public ObjectResult<MessagesOfConversation> USP_GetMessagesOfAConversationPaged(Nullable<global::System.Guid> iDUserConversationOwner, Nullable<global::System.Guid> iDConversation, Nullable<global::System.Int32> offset, Nullable<global::System.Int32> pageSize)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            ObjectParameter offsetParameter;
            if (offset.HasValue)
            {
                offsetParameter = new ObjectParameter("Offset", offset);
            }
            else
            {
                offsetParameter = new ObjectParameter("Offset", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MessagesOfConversation>("USP_GetMessagesOfAConversationPaged", iDUserConversationOwnerParameter, iDConversationParameter, offsetParameter, pageSizeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        /// <param name="iDConversation">No Metadata Documentation available.</param>
        public ObjectResult<NumberOfMessages> USP_MessagesNumberOfAConversation(Nullable<global::System.Guid> iDUserConversationOwner, Nullable<global::System.Guid> iDConversation)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            ObjectParameter iDConversationParameter;
            if (iDConversation.HasValue)
            {
                iDConversationParameter = new ObjectParameter("IDConversation", iDConversation);
            }
            else
            {
                iDConversationParameter = new ObjectParameter("IDConversation", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<NumberOfMessages>("USP_MessagesNumberOfAConversation", iDUserConversationOwnerParameter, iDConversationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        /// <param name="iDUserSender">No Metadata Documentation available.</param>
        public ObjectResult<MessagesToRead> USP_GetMessagesToReadByUser(Nullable<global::System.Guid> iDUserConversationOwner, Nullable<global::System.Guid> iDUserSender)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            ObjectParameter iDUserSenderParameter;
            if (iDUserSender.HasValue)
            {
                iDUserSenderParameter = new ObjectParameter("IDUserSender", iDUserSender);
            }
            else
            {
                iDUserSenderParameter = new ObjectParameter("IDUserSender", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<MessagesToRead>("USP_GetMessagesToReadByUser", iDUserConversationOwnerParameter, iDUserSenderParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDUserConversationOwner">No Metadata Documentation available.</param>
        public ObjectResult<NumberOfMessages> USP_CountMessagesNotRead(Nullable<global::System.Guid> iDUserConversationOwner)
        {
            ObjectParameter iDUserConversationOwnerParameter;
            if (iDUserConversationOwner.HasValue)
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", iDUserConversationOwner);
            }
            else
            {
                iDUserConversationOwnerParameter = new ObjectParameter("IDUserConversationOwner", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<NumberOfMessages>("USP_CountMessagesNotRead", iDUserConversationOwnerParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBMessageChatModel", Name="Messages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Messages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Messages object.
        /// </summary>
        /// <param name="iDMessage">Initial value of the IDMessage property.</param>
        /// <param name="iDMessageType">Initial value of the IDMessageType property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static Messages CreateMessages(global::System.Guid iDMessage, global::System.Int32 iDMessageType, global::System.String message)
        {
            Messages messages = new Messages();
            messages.IDMessage = iDMessage;
            messages.IDMessageType = iDMessageType;
            messages.Message = message;
            return messages;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDMessage
        {
            get
            {
                return _IDMessage;
            }
            set
            {
                if (_IDMessage != value)
                {
                    OnIDMessageChanging(value);
                    ReportPropertyChanging("IDMessage");
                    _IDMessage = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDMessage");
                    OnIDMessageChanged();
                }
            }
        }
        private global::System.Guid _IDMessage;
        partial void OnIDMessageChanging(global::System.Guid value);
        partial void OnIDMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMessageType
        {
            get
            {
                return _IDMessageType;
            }
            set
            {
                OnIDMessageTypeChanging(value);
                ReportPropertyChanging("IDMessageType");
                _IDMessageType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMessageType");
                OnIDMessageTypeChanged();
            }
        }
        private global::System.Int32 _IDMessageType;
        partial void OnIDMessageTypeChanging(global::System.Int32 value);
        partial void OnIDMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBMessageChatModel", "FK_Messages_MessagesTypes", "MessagesTypes")]
        public MessagesTypes MessagesTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessagesTypes>("DBMessageChatModel.FK_Messages_MessagesTypes", "MessagesTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessagesTypes>("DBMessageChatModel.FK_Messages_MessagesTypes", "MessagesTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessagesTypes> MessagesTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessagesTypes>("DBMessageChatModel.FK_Messages_MessagesTypes", "MessagesTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessagesTypes>("DBMessageChatModel.FK_Messages_MessagesTypes", "MessagesTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBMessageChatModel", "FK_MessagesRecipients_Messages", "MessagesRecipients")]
        public EntityCollection<MessagesRecipients> MessagesRecipients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessagesRecipients>("DBMessageChatModel.FK_MessagesRecipients_Messages", "MessagesRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessagesRecipients>("DBMessageChatModel.FK_MessagesRecipients_Messages", "MessagesRecipients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBMessageChatModel", Name="MessagesRecipients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessagesRecipients : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessagesRecipients object.
        /// </summary>
        /// <param name="iDMessageRecipient">Initial value of the IDMessageRecipient property.</param>
        /// <param name="iDMessage">Initial value of the IDMessage property.</param>
        /// <param name="iDUserRecipient">Initial value of the IDUserRecipient property.</param>
        /// <param name="iDUserConversation">Initial value of the IDUserConversation property.</param>
        /// <param name="iDUserSender">Initial value of the IDUserSender property.</param>
        /// <param name="sentOn">Initial value of the SentOn property.</param>
        public static MessagesRecipients CreateMessagesRecipients(global::System.Guid iDMessageRecipient, global::System.Guid iDMessage, global::System.Guid iDUserRecipient, global::System.Guid iDUserConversation, global::System.Guid iDUserSender, global::System.DateTime sentOn)
        {
            MessagesRecipients messagesRecipients = new MessagesRecipients();
            messagesRecipients.IDMessageRecipient = iDMessageRecipient;
            messagesRecipients.IDMessage = iDMessage;
            messagesRecipients.IDUserRecipient = iDUserRecipient;
            messagesRecipients.IDUserConversation = iDUserConversation;
            messagesRecipients.IDUserSender = iDUserSender;
            messagesRecipients.SentOn = sentOn;
            return messagesRecipients;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDMessageRecipient
        {
            get
            {
                return _IDMessageRecipient;
            }
            set
            {
                if (_IDMessageRecipient != value)
                {
                    OnIDMessageRecipientChanging(value);
                    ReportPropertyChanging("IDMessageRecipient");
                    _IDMessageRecipient = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDMessageRecipient");
                    OnIDMessageRecipientChanged();
                }
            }
        }
        private global::System.Guid _IDMessageRecipient;
        partial void OnIDMessageRecipientChanging(global::System.Guid value);
        partial void OnIDMessageRecipientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDMessage
        {
            get
            {
                return _IDMessage;
            }
            set
            {
                OnIDMessageChanging(value);
                ReportPropertyChanging("IDMessage");
                _IDMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMessage");
                OnIDMessageChanged();
            }
        }
        private global::System.Guid _IDMessage;
        partial void OnIDMessageChanging(global::System.Guid value);
        partial void OnIDMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserRecipient
        {
            get
            {
                return _IDUserRecipient;
            }
            set
            {
                OnIDUserRecipientChanging(value);
                ReportPropertyChanging("IDUserRecipient");
                _IDUserRecipient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserRecipient");
                OnIDUserRecipientChanged();
            }
        }
        private global::System.Guid _IDUserRecipient;
        partial void OnIDUserRecipientChanging(global::System.Guid value);
        partial void OnIDUserRecipientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ViewedOn
        {
            get
            {
                return _ViewedOn;
            }
            set
            {
                OnViewedOnChanging(value);
                ReportPropertyChanging("ViewedOn");
                _ViewedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewedOn");
                OnViewedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ViewedOn;
        partial void OnViewedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnViewedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserConversation
        {
            get
            {
                return _IDUserConversation;
            }
            set
            {
                OnIDUserConversationChanging(value);
                ReportPropertyChanging("IDUserConversation");
                _IDUserConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserConversation");
                OnIDUserConversationChanged();
            }
        }
        private global::System.Guid _IDUserConversation;
        partial void OnIDUserConversationChanging(global::System.Guid value);
        partial void OnIDUserConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserSender
        {
            get
            {
                return _IDUserSender;
            }
            set
            {
                OnIDUserSenderChanging(value);
                ReportPropertyChanging("IDUserSender");
                _IDUserSender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserSender");
                OnIDUserSenderChanged();
            }
        }
        private global::System.Guid _IDUserSender;
        partial void OnIDUserSenderChanging(global::System.Guid value);
        partial void OnIDUserSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentOn
        {
            get
            {
                return _SentOn;
            }
            set
            {
                OnSentOnChanging(value);
                ReportPropertyChanging("SentOn");
                _SentOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentOn");
                OnSentOnChanged();
            }
        }
        private global::System.DateTime _SentOn;
        partial void OnSentOnChanging(global::System.DateTime value);
        partial void OnSentOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBMessageChatModel", "FK_MessagesRecipients_Messages", "Messages")]
        public Messages Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Messages>("DBMessageChatModel.FK_MessagesRecipients_Messages", "Messages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Messages>("DBMessageChatModel.FK_MessagesRecipients_Messages", "Messages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Messages> MessagesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Messages>("DBMessageChatModel.FK_MessagesRecipients_Messages", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Messages>("DBMessageChatModel.FK_MessagesRecipients_Messages", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBMessageChatModel", "FK_MessagesRecipients_UsersConversations", "UsersConversations")]
        public UsersConversations UsersConversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersConversations>("DBMessageChatModel.FK_MessagesRecipients_UsersConversations", "UsersConversations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersConversations>("DBMessageChatModel.FK_MessagesRecipients_UsersConversations", "UsersConversations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsersConversations> UsersConversationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsersConversations>("DBMessageChatModel.FK_MessagesRecipients_UsersConversations", "UsersConversations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsersConversations>("DBMessageChatModel.FK_MessagesRecipients_UsersConversations", "UsersConversations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBMessageChatModel", Name="MessagesTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessagesTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessagesTypes object.
        /// </summary>
        /// <param name="iDMessageType">Initial value of the IDMessageType property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        /// <param name="messageMaxLength">Initial value of the MessageMaxLength property.</param>
        /// <param name="messageTypeEnabled">Initial value of the MessageTypeEnabled property.</param>
        public static MessagesTypes CreateMessagesTypes(global::System.Int32 iDMessageType, global::System.String messageType, global::System.Int32 messageMaxLength, global::System.Boolean messageTypeEnabled)
        {
            MessagesTypes messagesTypes = new MessagesTypes();
            messagesTypes.IDMessageType = iDMessageType;
            messagesTypes.MessageType = messageType;
            messagesTypes.MessageMaxLength = messageMaxLength;
            messagesTypes.MessageTypeEnabled = messageTypeEnabled;
            return messagesTypes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMessageType
        {
            get
            {
                return _IDMessageType;
            }
            set
            {
                if (_IDMessageType != value)
                {
                    OnIDMessageTypeChanging(value);
                    ReportPropertyChanging("IDMessageType");
                    _IDMessageType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDMessageType");
                    OnIDMessageTypeChanged();
                }
            }
        }
        private global::System.Int32 _IDMessageType;
        partial void OnIDMessageTypeChanging(global::System.Int32 value);
        partial void OnIDMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                OnMessageTypeChanging(value);
                ReportPropertyChanging("MessageType");
                _MessageType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageType");
                OnMessageTypeChanged();
            }
        }
        private global::System.String _MessageType;
        partial void OnMessageTypeChanging(global::System.String value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageMaxLength
        {
            get
            {
                return _MessageMaxLength;
            }
            set
            {
                OnMessageMaxLengthChanging(value);
                ReportPropertyChanging("MessageMaxLength");
                _MessageMaxLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageMaxLength");
                OnMessageMaxLengthChanged();
            }
        }
        private global::System.Int32 _MessageMaxLength;
        partial void OnMessageMaxLengthChanging(global::System.Int32 value);
        partial void OnMessageMaxLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MessageTypeEnabled
        {
            get
            {
                return _MessageTypeEnabled;
            }
            set
            {
                OnMessageTypeEnabledChanging(value);
                ReportPropertyChanging("MessageTypeEnabled");
                _MessageTypeEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTypeEnabled");
                OnMessageTypeEnabledChanged();
            }
        }
        private global::System.Boolean _MessageTypeEnabled;
        partial void OnMessageTypeEnabledChanging(global::System.Boolean value);
        partial void OnMessageTypeEnabledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBMessageChatModel", "FK_Messages_MessagesTypes", "Messages")]
        public EntityCollection<Messages> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Messages>("DBMessageChatModel.FK_Messages_MessagesTypes", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Messages>("DBMessageChatModel.FK_Messages_MessagesTypes", "Messages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBMessageChatModel", Name="UsersConversations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersConversations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersConversations object.
        /// </summary>
        /// <param name="iDUserConversation">Initial value of the IDUserConversation property.</param>
        /// <param name="iDConversation">Initial value of the IDConversation property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static UsersConversations CreateUsersConversations(global::System.Guid iDUserConversation, global::System.Guid iDConversation, global::System.Guid iDUser, global::System.DateTime createdOn)
        {
            UsersConversations usersConversations = new UsersConversations();
            usersConversations.IDUserConversation = iDUserConversation;
            usersConversations.IDConversation = iDConversation;
            usersConversations.IDUser = iDUser;
            usersConversations.CreatedOn = createdOn;
            return usersConversations;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserConversation
        {
            get
            {
                return _IDUserConversation;
            }
            set
            {
                if (_IDUserConversation != value)
                {
                    OnIDUserConversationChanging(value);
                    ReportPropertyChanging("IDUserConversation");
                    _IDUserConversation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUserConversation");
                    OnIDUserConversationChanged();
                }
            }
        }
        private global::System.Guid _IDUserConversation;
        partial void OnIDUserConversationChanging(global::System.Guid value);
        partial void OnIDUserConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDConversation
        {
            get
            {
                return _IDConversation;
            }
            set
            {
                OnIDConversationChanging(value);
                ReportPropertyChanging("IDConversation");
                _IDConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDConversation");
                OnIDConversationChanged();
            }
        }
        private global::System.Guid _IDConversation;
        partial void OnIDConversationChanging(global::System.Guid value);
        partial void OnIDConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Guid _IDUser;
        partial void OnIDUserChanging(global::System.Guid value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchivedOn
        {
            get
            {
                return _ArchivedOn;
            }
            set
            {
                OnArchivedOnChanging(value);
                ReportPropertyChanging("ArchivedOn");
                _ArchivedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchivedOn");
                OnArchivedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchivedOn;
        partial void OnArchivedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnArchivedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBMessageChatModel", "FK_MessagesRecipients_UsersConversations", "MessagesRecipients")]
        public EntityCollection<MessagesRecipients> MessagesRecipients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessagesRecipients>("DBMessageChatModel.FK_MessagesRecipients_UsersConversations", "MessagesRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessagesRecipients>("DBMessageChatModel.FK_MessagesRecipients_UsersConversations", "MessagesRecipients", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="Conversation")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Conversation : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conversation object.
        /// </summary>
        /// <param name="iDConversation">Initial value of the IDConversation property.</param>
        public static Conversation CreateConversation(global::System.Guid iDConversation)
        {
            Conversation conversation = new Conversation();
            conversation.IDConversation = iDConversation;
            return conversation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDConversation
        {
            get
            {
                return _IDConversation;
            }
            set
            {
                OnIDConversationChanging(value);
                ReportPropertyChanging("IDConversation");
                _IDConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDConversation");
                OnIDConversationChanged();
            }
        }
        private global::System.Guid _IDConversation;
        partial void OnIDConversationChanging(global::System.Guid value);
        partial void OnIDConversationChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="ListOfConversations")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListOfConversations : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListOfConversations object.
        /// </summary>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="iDUserConversation">Initial value of the IDUserConversation property.</param>
        /// <param name="iDConversation">Initial value of the IDConversation property.</param>
        /// <param name="friend">Initial value of the Friend property.</param>
        public static ListOfConversations CreateListOfConversations(global::System.Guid iDUser, global::System.Guid iDUserConversation, global::System.Guid iDConversation, global::System.Guid friend)
        {
            ListOfConversations listOfConversations = new ListOfConversations();
            listOfConversations.IDUser = iDUser;
            listOfConversations.IDUserConversation = iDUserConversation;
            listOfConversations.IDConversation = iDConversation;
            listOfConversations.Friend = friend;
            return listOfConversations;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Guid _IDUser;
        partial void OnIDUserChanging(global::System.Guid value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserConversation
        {
            get
            {
                return _IDUserConversation;
            }
            set
            {
                OnIDUserConversationChanging(value);
                ReportPropertyChanging("IDUserConversation");
                _IDUserConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserConversation");
                OnIDUserConversationChanged();
            }
        }
        private global::System.Guid _IDUserConversation;
        partial void OnIDUserConversationChanging(global::System.Guid value);
        partial void OnIDUserConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDConversation
        {
            get
            {
                return _IDConversation;
            }
            set
            {
                OnIDConversationChanging(value);
                ReportPropertyChanging("IDConversation");
                _IDConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDConversation");
                OnIDConversationChanged();
            }
        }
        private global::System.Guid _IDConversation;
        partial void OnIDConversationChanging(global::System.Guid value);
        partial void OnIDConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Friend
        {
            get
            {
                return _Friend;
            }
            set
            {
                OnFriendChanging(value);
                ReportPropertyChanging("Friend");
                _Friend = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Friend");
                OnFriendChanged();
            }
        }
        private global::System.Guid _Friend;
        partial void OnFriendChanging(global::System.Guid value);
        partial void OnFriendChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDateMessage
        {
            get
            {
                return _LastDateMessage;
            }
            set
            {
                OnLastDateMessageChanging(value);
                ReportPropertyChanging("LastDateMessage");
                _LastDateMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastDateMessage");
                OnLastDateMessageChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDateMessage;
        partial void OnLastDateMessageChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDateMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="ListOfUserSender")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListOfUserSender : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListOfUserSender object.
        /// </summary>
        /// <param name="iDUserSender">Initial value of the IDUserSender property.</param>
        public static ListOfUserSender CreateListOfUserSender(global::System.Guid iDUserSender)
        {
            ListOfUserSender listOfUserSender = new ListOfUserSender();
            listOfUserSender.IDUserSender = iDUserSender;
            return listOfUserSender;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserSender
        {
            get
            {
                return _IDUserSender;
            }
            set
            {
                OnIDUserSenderChanging(value);
                ReportPropertyChanging("IDUserSender");
                _IDUserSender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserSender");
                OnIDUserSenderChanged();
            }
        }
        private global::System.Guid _IDUserSender;
        partial void OnIDUserSenderChanging(global::System.Guid value);
        partial void OnIDUserSenderChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="MessagesOfConversation")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MessagesOfConversation : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessagesOfConversation object.
        /// </summary>
        /// <param name="iDMessage">Initial value of the IDMessage property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="iDMessageRecipient">Initial value of the IDMessageRecipient property.</param>
        /// <param name="iDUserConversation">Initial value of the IDUserConversation property.</param>
        /// <param name="iDUserSender">Initial value of the IDUserSender property.</param>
        /// <param name="sentOn">Initial value of the SentOn property.</param>
        /// <param name="iDConversation">Initial value of the IDConversation property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static MessagesOfConversation CreateMessagesOfConversation(global::System.Guid iDMessage, global::System.String message, global::System.Guid iDMessageRecipient, global::System.Guid iDUserConversation, global::System.Guid iDUserSender, global::System.DateTime sentOn, global::System.Guid iDConversation, global::System.DateTime createdOn)
        {
            MessagesOfConversation messagesOfConversation = new MessagesOfConversation();
            messagesOfConversation.IDMessage = iDMessage;
            messagesOfConversation.Message = message;
            messagesOfConversation.IDMessageRecipient = iDMessageRecipient;
            messagesOfConversation.IDUserConversation = iDUserConversation;
            messagesOfConversation.IDUserSender = iDUserSender;
            messagesOfConversation.SentOn = sentOn;
            messagesOfConversation.IDConversation = iDConversation;
            messagesOfConversation.CreatedOn = createdOn;
            return messagesOfConversation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDMessage
        {
            get
            {
                return _IDMessage;
            }
            set
            {
                OnIDMessageChanging(value);
                ReportPropertyChanging("IDMessage");
                _IDMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMessage");
                OnIDMessageChanged();
            }
        }
        private global::System.Guid _IDMessage;
        partial void OnIDMessageChanging(global::System.Guid value);
        partial void OnIDMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDMessageRecipient
        {
            get
            {
                return _IDMessageRecipient;
            }
            set
            {
                OnIDMessageRecipientChanging(value);
                ReportPropertyChanging("IDMessageRecipient");
                _IDMessageRecipient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMessageRecipient");
                OnIDMessageRecipientChanged();
            }
        }
        private global::System.Guid _IDMessageRecipient;
        partial void OnIDMessageRecipientChanging(global::System.Guid value);
        partial void OnIDMessageRecipientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserConversation
        {
            get
            {
                return _IDUserConversation;
            }
            set
            {
                OnIDUserConversationChanging(value);
                ReportPropertyChanging("IDUserConversation");
                _IDUserConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserConversation");
                OnIDUserConversationChanged();
            }
        }
        private global::System.Guid _IDUserConversation;
        partial void OnIDUserConversationChanging(global::System.Guid value);
        partial void OnIDUserConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserSender
        {
            get
            {
                return _IDUserSender;
            }
            set
            {
                OnIDUserSenderChanging(value);
                ReportPropertyChanging("IDUserSender");
                _IDUserSender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserSender");
                OnIDUserSenderChanged();
            }
        }
        private global::System.Guid _IDUserSender;
        partial void OnIDUserSenderChanging(global::System.Guid value);
        partial void OnIDUserSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentOn
        {
            get
            {
                return _SentOn;
            }
            set
            {
                OnSentOnChanging(value);
                ReportPropertyChanging("SentOn");
                _SentOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentOn");
                OnSentOnChanged();
            }
        }
        private global::System.DateTime _SentOn;
        partial void OnSentOnChanging(global::System.DateTime value);
        partial void OnSentOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDConversation
        {
            get
            {
                return _IDConversation;
            }
            set
            {
                OnIDConversationChanging(value);
                ReportPropertyChanging("IDConversation");
                _IDConversation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDConversation");
                OnIDConversationChanged();
            }
        }
        private global::System.Guid _IDConversation;
        partial void OnIDConversationChanging(global::System.Guid value);
        partial void OnIDConversationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="MessagesToRead")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MessagesToRead : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessagesToRead object.
        /// </summary>
        /// <param name="iDMessage">Initial value of the IDMessage property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="iDUserSender">Initial value of the IDUserSender property.</param>
        /// <param name="sentOn">Initial value of the SentOn property.</param>
        public static MessagesToRead CreateMessagesToRead(global::System.Guid iDMessage, global::System.String message, global::System.Guid iDUserSender, global::System.DateTime sentOn)
        {
            MessagesToRead messagesToRead = new MessagesToRead();
            messagesToRead.IDMessage = iDMessage;
            messagesToRead.Message = message;
            messagesToRead.IDUserSender = iDUserSender;
            messagesToRead.SentOn = sentOn;
            return messagesToRead;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDMessage
        {
            get
            {
                return _IDMessage;
            }
            set
            {
                OnIDMessageChanging(value);
                ReportPropertyChanging("IDMessage");
                _IDMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMessage");
                OnIDMessageChanged();
            }
        }
        private global::System.Guid _IDMessage;
        partial void OnIDMessageChanging(global::System.Guid value);
        partial void OnIDMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IDUserSender
        {
            get
            {
                return _IDUserSender;
            }
            set
            {
                OnIDUserSenderChanging(value);
                ReportPropertyChanging("IDUserSender");
                _IDUserSender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUserSender");
                OnIDUserSenderChanged();
            }
        }
        private global::System.Guid _IDUserSender;
        partial void OnIDUserSenderChanging(global::System.Guid value);
        partial void OnIDUserSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentOn
        {
            get
            {
                return _SentOn;
            }
            set
            {
                OnSentOnChanging(value);
                ReportPropertyChanging("SentOn");
                _SentOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentOn");
                OnSentOnChanged();
            }
        }
        private global::System.DateTime _SentOn;
        partial void OnSentOnChanging(global::System.DateTime value);
        partial void OnSentOnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="NumberOfMessages")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class NumberOfMessages : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NumberOfMessages object.
        /// </summary>
        /// <param name="messagesNumber">Initial value of the MessagesNumber property.</param>
        public static NumberOfMessages CreateNumberOfMessages(global::System.Int32 messagesNumber)
        {
            NumberOfMessages numberOfMessages = new NumberOfMessages();
            numberOfMessages.MessagesNumber = messagesNumber;
            return numberOfMessages;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessagesNumber
        {
            get
            {
                return _MessagesNumber;
            }
            set
            {
                OnMessagesNumberChanging(value);
                ReportPropertyChanging("MessagesNumber");
                _MessagesNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessagesNumber");
                OnMessagesNumberChanged();
            }
        }
        private global::System.Int32 _MessagesNumber;
        partial void OnMessagesNumberChanging(global::System.Int32 value);
        partial void OnMessagesNumberChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBMessageChatModel", Name="USPResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class USPResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USPResult object.
        /// </summary>
        /// <param name="isError">Initial value of the isError property.</param>
        /// <param name="resultExecutionCode">Initial value of the ResultExecutionCode property.</param>
        /// <param name="uSPReturnValue">Initial value of the USPReturnValue property.</param>
        public static USPResult CreateUSPResult(global::System.Boolean isError, global::System.String resultExecutionCode, global::System.String uSPReturnValue)
        {
            USPResult uSPResult = new USPResult();
            uSPResult.isError = isError;
            uSPResult.ResultExecutionCode = resultExecutionCode;
            uSPResult.USPReturnValue = uSPReturnValue;
            return uSPResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isError
        {
            get
            {
                return _isError;
            }
            set
            {
                OnisErrorChanging(value);
                ReportPropertyChanging("isError");
                _isError = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isError");
                OnisErrorChanged();
            }
        }
        private global::System.Boolean _isError;
        partial void OnisErrorChanging(global::System.Boolean value);
        partial void OnisErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultExecutionCode
        {
            get
            {
                return _ResultExecutionCode;
            }
            set
            {
                OnResultExecutionCodeChanging(value);
                ReportPropertyChanging("ResultExecutionCode");
                _ResultExecutionCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResultExecutionCode");
                OnResultExecutionCodeChanged();
            }
        }
        private global::System.String _ResultExecutionCode;
        partial void OnResultExecutionCodeChanging(global::System.String value);
        partial void OnResultExecutionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USPReturnValue
        {
            get
            {
                return _USPReturnValue;
            }
            set
            {
                OnUSPReturnValueChanging(value);
                ReportPropertyChanging("USPReturnValue");
                _USPReturnValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USPReturnValue");
                OnUSPReturnValueChanged();
            }
        }
        private global::System.String _USPReturnValue;
        partial void OnUSPReturnValueChanging(global::System.String value);
        partial void OnUSPReturnValueChanged();

        #endregion

    }

    #endregion

    
}
