using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using MyCookin.ObjectManager.UserManager;
using MyCookin.Common;
using MyCookin.ErrorAndMessage;
using MyCookin.Log;
using MyCookin.ObjectManager.StatisticsManager;
using System.Net;
using System.IO;
using System.Text;

namespace MyCookinWeb.UserInfo
{
    public partial class ForgotPassword :  MyCookinWeb.Form.MyPageBase
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            #region FacebookRegistrationOrLogin

            if (!String.IsNullOrEmpty(Request.QueryString["code"]))
            {
                string code = Request.QueryString["code"];

                string callBackUrl = Request.Url.AbsoluteUri.Replace(Request.Url.Query, "");

                //Client Id Which YOU Got when you Register You Application
                string FacebookClientId = AppConfig.GetValue("facebook_appid", AppDomain.CurrentDomain);

                WebRequest request = WebRequest.Create(string.Format("https://graph.facebook.com/oauth/" +
                "access_token?client_id={0}&redirect_uri={1}&client_secret={2}&code={3}",
                FacebookClientId, callBackUrl, AppConfig.GetValue("facebook_appsecret", AppDomain.CurrentDomain), code));

                WebResponse response = request.GetResponse();

                Stream stream = response.GetResponseStream();
                Encoding encode = System.Text.Encoding.GetEncoding("utf-8");
                StreamReader streamReader = new StreamReader(stream, encode);
                string accessToken = streamReader.ReadToEnd().Replace("access_token=", "");
                streamReader.Close();
                response.Close();

                string url = "/Auth/Auth.aspx?fbaccessToken=" + accessToken;
                Response.Redirect(url, true);
            }
            #endregion

            if (!IsPostBack)
            {
                //Set default button
                Page.Form.DefaultButton = lbtnForgotPsw1.UniqueID.ToString();
            }
            else
            {
                if (pnlForgotPswForm1.Visible)
                {
                    //Set default button
                    Page.Form.DefaultButton = lbtnForgotPsw1.UniqueID.ToString();
                }
                else
                {
                    //Set default button
                    Page.Form.DefaultButton = lbtnForgotPsw2.UniqueID.ToString();
                }
            }

            

            //OnLoad shows only email field
            pnlForgotPswForm2.Visible = false;
            lbtnForgotPsw2.Visible = false;

            //Focus on the first TextBox
            //Notice: Using Placeholder, if you use IE don't see the placeholder because it remove when textbox is selected
            //ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "FocusOnLoad('" + txtEmail.ClientID + "');", true);
        }

        #region Button1
        //Button 1: Insert Email
        //If Securityanswer exists for this email, shows other fields and Button 2
        protected void lbtnForgotPsw_Click(object sender, EventArgs e)
        {
            string Email = txtEmail.Text.ToString();

            
            

            //Initialize a Session Variable to count user errors answering to security question
            //Will be incremented foreach error in button 2
            Session["errorCounter"] = 0;

            //Store Email in Session Varible to use in the second button
            Session["Email"] = Email;
            
            try
            {
                MyUser InfoUser = new MyUser(Email, "");
                InfoUser.GetUserInfoAllByID();

                //Check If Email is Correct
                if (!InfoUser.IDUser.Equals(new Guid()))
                {
                    //If IDSecurityQuestion is set, email is not necessary.
                    //Could be change password with Security Answer
                    if (String.IsNullOrEmpty(InfoUser.IDSecurityQuestion.ToString()))    //IDSecurityQuestion NOT set
                    {   
                        //User needs a code to reset psw (sent by email or shown in link)
                        //ResetPassword will check the confirmationCode generated by HASH[(SecurityAnswer + IDUser + PasswordHash)]

                        //Generate New TemporaryCode
                        string TemporaryCode = InfoUser.GenerateNewTemporaryCode();

                        //SecurityAnswer Column is not yet completed, then insert this code in that column.
                        //UPDATE ConfirmationCode in User Table (column SecurityAnswer)
                        InfoUser.UpdateTemporarySecurityAnswer(TemporaryCode);

                        //ConfirmationCode will be HASH[(SecurityAnswer (BUT FOR NOW IS TEMPORARYCODE) + IDUser + PasswordHash)]
                        string ConfirmationCode = MySecurity.GenerateSHA1Hash(TemporaryCode + InfoUser.IDUser + InfoUser.PasswordHash);

                        //Link to Reset Password sent by email
                        string link = Network.GetCurrentPathUrl() + Server.UrlEncode("ResetPassword.aspx?ID=" + HttpUtility.UrlEncode(InfoUser.IDUser.ToString()) + "&ConfirmationCode=" + HttpUtility.UrlEncode(ConfirmationCode));

                        //Hide Fields and Button
                        pnlForgotPswForm1.Visible = false;

                        //Send email to new user
                        string From = AppConfig.GetValue("EmailFromProfileUser", AppDomain.CurrentDomain);
                        string To = txtEmail.Text.ToString();
                        string Subject = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-IN-0056");
                        //string Message = "<a href=\"" + link + "\">" + RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-IN-0016") + "</a>";
                        string url = "/PagesForEmail/ResetUserPassword.aspx?link=" + link;

                        Network Mail = new Network(From, To, "", "", Subject, "", url);

                        if (!Mail.SendEmail())
                        {
                            //Error in send email, show link
                            
                            //Show JQueryUi BoxDialog With Redirect
                            string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-9999");
                            string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-0005");
                            string RedirectUrl = AppConfig.GetValue("HomePage", AppDomain.CurrentDomain);
                            ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialogWithRedirect('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "', '" + RedirectUrl + "');", true);
                            
                            //WRITE A ROW IN LOG FILE AND DB
                            try
                            {
                                LogRow NewRow = new LogRow(DateTime.UtcNow, LogLevel.Errors.ToString(), "", Network.GetCurrentPageName(), "US-ER-0005", "Send Email Error in Forgot Password Page", InfoUser.IDUser.ToString(), true, false);
                                LogManager.WriteDBLog(LogLevel.Errors, NewRow);
                                LogManager.WriteFileLog(LogLevel.Errors, false, NewRow);
                            }
                            catch { }
                        }
                        else
                        {
                            //Email Sent

                            //WRITE A ROW IN STATISTICS DB
                            try
                            {
                                MyStatistics NewStatisticUser = new MyStatistics(InfoUser.IDUser, null, StatisticsActionType.US_EmailSent, "Forgot Password Page", Network.GetCurrentPageName(), "", Session.SessionID);
                                NewStatisticUser.InsertNewRow();
                            }
                            catch { }

                            //Show JQueryUi BoxDialog With Redirect
                            string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-IN-9999");
                            string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-IN-0006");
                            string RedirectUrl = AppConfig.GetValue("LoginPage", AppDomain.CurrentDomain);
                            ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialogWithRedirect('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "', '" + RedirectUrl + "');", true);
                        }
                    }
                    else //IDSecurityQuestion is set.
                    {
                        //Hide eMail fields
                        pnlForgotPswForm1.Visible = false;
                        lbtnForgotPsw1.Visible = false;

                        //Show fields for Security answer
                        pnlForgotPswForm2.Visible = true;
                        lbtnForgotPsw2.Visible = true;

                        //Change Default Button
                        Page.Form.DefaultButton = lbtnForgotPsw2.UniqueID.ToString();

                        //Notice: Using Placeholder, if you use IE don't see the placeholder because it remove when textbox is selected
                        ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "FocusOnLoad('" + txtSecurityAnswer.ClientID + "');", true);

                        try
                        {
                            //Get Security Question Text
                            lblSecurityQuestion.Text = InfoUser.GetSecurityQuestion();
                        }
                        catch
                        {
                            //Never should go here.
                            lblSecurityQuestion.Text = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-9999");

                            //WRITE A ROW IN LOG FILE AND DB
                            try
                            {
                                LogRow NewRow = new LogRow(DateTime.UtcNow, LogLevel.Errors.ToString(), "", Network.GetCurrentPageName(), "US-ER-9999", "Check Security Question Existence with IDLanguage:" + MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), InfoUser.IDUser.ToString(), true, false);
                                LogManager.WriteDBLog(LogLevel.Errors, NewRow);
                                LogManager.WriteFileLog(LogLevel.Errors, true, NewRow);
                            }
                            catch { }
                        }
                    }
                }
                else
                {
                    //Email not found
                    //Show JQueryUi BoxDialog - JS: ShowJQuiBoxDialog(Title, Text)
                    string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-WN-9999");
                    string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-WN-0003");
                    //ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialog('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "');", true);

                    lblWrongEmail.Text = BoxText;
                    lblWrongEmail.Visible = true;

                    //Show Again Fields and Button
                    pnlForgotPswForm1.Visible = true;

                    txtEmail.Text = "";
                }
            }
            catch
            {
                //WRITE A ROW IN LOG FILE AND DB
                try
                {
                    LogRow NewRow = new LogRow(DateTime.UtcNow, LogLevel.Errors.ToString(), "", Network.GetCurrentPageName(), "US-ER-9999", "Error in Forgot Password Page", "", true, false);
                    LogManager.WriteDBLog(LogLevel.Errors, NewRow);
                    LogManager.WriteFileLog(LogLevel.Errors, true, NewRow);
                }
                catch { }

                //Show JQueryUi BoxDialog With Redirect
                string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-9999");
                string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-0001");
                string RedirectUrl = AppConfig.GetValue("HomePage", AppDomain.CurrentDomain);
                ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialogWithRedirect('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "', '" + RedirectUrl + "');", true);
            }
        }
        #endregion

        #region Button2
        //Button to check if the answer is correct
        protected void lbtnForgotPsw2_Click(object sender, EventArgs e)
        {
           
            try
            {
                //No default button
                Page.Form.DefaultButton = null;

                //Hide First Button to check Email and BirthDate
                lbtnForgotPsw1.Visible = false;

                string Email = Session["Email"].ToString();

                string SecurityAnswer = txtSecurityAnswer.Text.ToString();

                string SecurityAnswerHash = MySecurity.GenerateSHA1Hash(SecurityAnswer);

                MyUser InfoUser = new MyUser(Email, "");
                InfoUser.GetUserInfoAllByID();

                if (InfoUser.SecurityAnswer.Equals(SecurityAnswerHash))
                {
                    //Now, ConfirmationCode will be HASH[(SecurityAnswer + IDUser + PasswordHash)]
                    string ConfirmationCode = MySecurity.GenerateSHA1Hash(InfoUser.SecurityAnswer + InfoUser.IDUser + InfoUser.PasswordHash);

                    //Link to Reset Password sent by email
                    string link = Network.GetCurrentPathUrl() + "ResetPassword.aspx?ID=" + HttpUtility.UrlEncode(InfoUser.IDUser.ToString()) + "&ConfirmationCode=" + HttpUtility.UrlEncode(ConfirmationCode);

                    //If correct Redirect to Reset Password
                    Response.Redirect(link, true);
                }
                else
                {
                    //Check here how many time the user try to change his password and miss the answer.
                    //After 3 times, delete Security Question and Answer from Db and redirect to ForgotPassword.aspx
                    //Then, procedure will be through email verification
                    int errorCounter = MyConvert.ToInt32(Session["errorCounter"].ToString(), 1);
                    Session["errorCounter"] = errorCounter += 1;

                    if (errorCounter < 3)
                    {
                        //Show fields for Security answer
                        pnlForgotPswForm2.Visible = true;
                        lbtnForgotPsw2.Visible = true;

                        txtSecurityAnswer.Text = "";

                        //The answer is not correct
                        //Show JQueryUi BoxDialog - JS: ShowJQuiBoxDialog(Title, Text)
                        string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-WN-9999");
                        string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-WN-0004");
                        //ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialog('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "');", true);

                        lblWrongAnswer.Text = BoxText;
                        lblWrongAnswer.Visible = true;

                        Page.Form.DefaultButton = lbtnForgotPsw2.UniqueID.ToString();
                    }
                    else
                    {
                        //Delete (Update to NULL) Security Question and Answer
                        InfoUser.DeleteSecurityQuestionAndAnswer();

                        //Show JQueryUi BoxDialog With Redirect
                        string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-WN-9999");
                        string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-WN-0011");
                        string RedirectUrl = "/User/ForgotPassword.aspx";
                        ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialogWithRedirect('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "', '" + RedirectUrl + "');", true);
                    }
                }
            }
            catch
            {
                //WRITE A ROW IN LOG FILE AND DB
                try
                {
                    LogRow NewRow = new LogRow(DateTime.UtcNow, LogLevel.Errors.ToString(), "", Network.GetCurrentPageName(), "US-ER-9999", "Error in Forgot Password Page - Part 2", "", true, false);
                    LogManager.WriteDBLog(LogLevel.Errors, NewRow);
                    LogManager.WriteFileLog(LogLevel.Errors, true, NewRow);
                }
                catch { }

                //Show JQueryUi BoxDialog With Redirect
                string BoxTitle = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-9999");
                string BoxText = RetrieveMessage.RetrieveDBMessage(MyConvert.ToInt32(HttpContext.Current.Session["IDLanguage"].ToString(), 1), "US-ER-0001");
                string RedirectUrl = AppConfig.GetValue("HomePage", AppDomain.CurrentDomain);
                ScriptManager.RegisterStartupScript(this, GetType(), Guid.NewGuid().ToString(), "ShowJQuiBoxDialogWithRedirect('" + BoxTitle.Replace("'", "\\'") + "','" + BoxText.Replace("'", "\\'") + "', '" + RedirectUrl + "');", true);
            }
        }
        #endregion

        #region btnFacebook_Click
        protected void btnFacebook_Click(object sender, ImageClickEventArgs e)
        {
            Session["Offset"] = hfOffset.Value;

            //Your Website Url which needs to Redirected
            string callBackUrl = "";
            if (!String.IsNullOrEmpty(Request.Url.Query))
            {
                callBackUrl = Request.Url.AbsoluteUri.Replace(Request.Url.Query, "");
            }
            else
            {
                callBackUrl = Request.Url.AbsoluteUri;
            }

            string FacebookClientId = AppConfig.GetValue("facebook_appid", AppDomain.CurrentDomain);
            string FacebookScopes = AppConfig.GetValue("facebook_scopes", AppDomain.CurrentDomain);

            Response.Redirect(string.Format("https://graph.facebook.com/oauth/" +
              "authorize?client_id={0}&redirect_uri={1}&scope={2}",
              FacebookClientId, callBackUrl, FacebookScopes));
        }
        #endregion

        #region btnGoogle_Click
        protected void btnGoogle_Click(object sender, ImageClickEventArgs e)
        {
            Session["Offset"] = hfOffset.Value;

            string urlRedirect = "/auth/auth.aspx?googleauth=true";

            Response.Redirect(urlRedirect, true);
        }
        #endregion

    }
}