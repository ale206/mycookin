var NotificationTimer; var MessageCountTimer; function UsersNotificationsLoad(ContainerNotificationList, IDUser) { $("#" + ContainerNotificationList + " ul").html(''); $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/UserBoard/UserNotifications.asmx/GetNotificationsForUser", data: "{ IDUser: '" + IDUser + "'}", success: function (msg) { $("#imgLoader").hide(); if (msg.d.length > 0) { var NumberOfNotificationsDontRead = 0; $.each(msg.d, function () { if (this['ViewedOn'] === null) { NumberOfNotificationsDontRead++; $("#" + ContainerNotificationList + " ul ").append("<li class=\"notification\">" + this['UserNotification'] + "</li>"); if (this['NotifiedOn'] === null) { ShowNotification(IDUser, this['IDUserNotification'], this['UserNotification']) } } else { $("#" + ContainerNotificationList + " ul ").append("<li class=\"notificationRead\">" + this['UserNotification'] + "</li>") } }); if (NumberOfNotificationsDontRead > 0) { $("#lblCountNotifications").html(NumberOfNotificationsDontRead); $("#hlImageNotification").removeClass("hlImageNotification"); $("#hlImageNotification").addClass("hlImageNotificationOn"); $("#lblCountNotifications").removeClass("lblCountNotificationsOff"); $("#lblCountNotifications").addClass("lblCountNotificationsOn"); var CurrentDocTitle = document.title; var n = CurrentDocTitle.indexOf(")"); if (n == -1) { document.title = "(" + msg.d.length + ") " + CurrentDocTitle } else { var numberOfNotifications = 0; try { numberOfNotifications = parseInt($("#lblCountMessages").html(), 10); if (isNaN(numberOfNotifications)) { numberOfNotifications = 0 } } catch (err) { numberOfNotifications = 0 } var NewNumber = parseInt(numberOfNotifications, 10) + parseInt(msg.d.length, 10); document.title = "(" + NewNumber + ") " + CurrentDocTitle.substring(n + 1, CurrentDocTitle.length) } } else { $("#lblCountNotifications").removeClass("lblCountNotificationsOn"); $("#lblCountNotifications").addClass("lblCountNotificationsOff"); if ((n > -1) && !isNaN($("#lblCountMessages").html())) { document.title = CurrentDocTitle.substring(n + 1, CurrentDocTitle.length) } } } else { } } }) } function MarkNotificationsAsRead(ContainerNotificationList, IDUserOwnerRelatedObject) { $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/UserBoard/UserNotifications.asmx/MarkNotificationsAsRead", data: "{ IDUserOwnerRelatedObject: '" + IDUserOwnerRelatedObject + "'}", success: function (msg) { if (msg.d) { $("#lblCountNotifications").html(''); $("#lblCountNotifications").removeClass("lblCountNotificationsOn"); $("#lblCountNotifications").addClass("lblCountNotificationsOff") } } }) } function ShowNotification(IDUser, IDUserNotification, UserNotification) { $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/UserBoard/UserNotifications.asmx/MarkNotificationsAsNotified", data: "{ IDUser: '" + IDUser + "', IDUserNotification: '" + IDUserNotification + "'}", success: function (msg) { if (msg.d) { noty({ text: UserNotification }) } } }) } function MessagesNotificationsLoad(IDUserConversationOwner) { $.ajax({ dataType: "json", contentType: "application/json; charset=utf-8", type: "POST", url: "http://" + WebServicesPath + "/Message/MessageManager.asmx/GetMessagesToRead", data: "{ IDUserConversationOwner: '" + IDUserConversationOwner + "'}", success: function (msg) { if (msg.d.length > 0) { $("#lblCountMessages").html(msg.d.length); $("#hlImageMessageNotification").removeClass("hlImageMessageNotification"); $("#hlImageMessageNotification").addClass("hlImageMessageNotificationOn"); $("#lblCountMessages").removeClass("lblCountMessagesOff"); $("#lblCountMessages").addClass("lblCountMessagesOn"); var CurrentDocTitle = document.title; var n = CurrentDocTitle.indexOf(")"); if (n == -1) { document.title = "(" + msg.d.length + ") " + CurrentDocTitle } else { var numberOfNotifications = 0; try { numberOfNotifications = parseInt($("#lblCountNotifications").html(), 10); if (isNaN(numberOfNotifications)) { numberOfNotifications = 0 } } catch (err) { numberOfNotifications = 0 } var NewNumber = parseInt(numberOfNotifications, 10) + parseInt(msg.d.length, 10); document.title = "(" + NewNumber + ") " + CurrentDocTitle.substring(n + 1, CurrentDocTitle.length) } } else { $("#hlImageMessageNotification").removeClass("hlImageMessageNotificationOn"); $("#hlImageMessageNotification").addClass("hlImageMessageNotification"); $("#lblCountMessages").removeClass("lblCountMessagesOn"); $("#lblCountMessages").addClass("lblCountMessagesOff"); var CurrentDocTitle = document.title; var n = CurrentDocTitle.indexOf(")"); if ((n > -1) && !isNaN($("#lblCountNotifications").html())) { document.title = CurrentDocTitle.substring(n + 1, CurrentDocTitle.length) } } } }) }